spring:
  profiles:
    active: prod
  application:
    name: keylearn
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    open-in-view: false
    #show-sql: true
    properties:
      hibernate:
        jdbc:
          batch_size: 100
          fetch_size: 200
          order_inserts: true
          order_updates: true
        format_sql: true
        database: postgresql
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        #generate_statistics: true
  flyway:
    url: ${DB_URL}
    user: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    table: flyway_history
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 15MB
      enabled: true
  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      s3:
        region: ${AWS_S3_REGION}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI}

  threads:
    virtual:
      enabled: true

io:
  sabeel:
    aws:
      s3:
        bucket-name: ${AWS_S3_BUCKET_NAME}
        cdn-base-url: ${AWS_S3_CDN_BASE_URL}



application:
  frontend:
    url: ${FRONTEND_URL}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS}
  websocket:
    endpoint: "/ws"
    allowed-origins: ${FRONTEND_URL}
    application-destination-prefix: "/app"
    user-destination-prefix: "/user"
    broker: "/user"
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    display-request-duration: true
  default-produces-media-type: application/json


server:
  port: 8081

logging:
  level:
    org.springframework.security: DEBUG

management:
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
  endpoints:
    web:
      exposure:
        include: health,prometheus
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true